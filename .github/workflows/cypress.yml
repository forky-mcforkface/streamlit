name: Cypress Tests

on: [push]

jobs:
  # list-spec-files:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     # matrix: ${{ steps.set-matrix.outputs.matrix }}
  #     matrix:
  #       specs: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]


  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: List all
  #       id: set-matrix
  #       run: | 
  #         TEMP=$(ls ./e2e/specs/${{ matrix.specs }}/*.spec.js)
  #         echo ./e2e/specs/${{ matrix.specs }}/*.spec.js
  #         echo "ls ./e2e/specs/${{ matrix.specs }}/*.spec.js"


  # build:

  #   runs-on: ubuntu-latest

  #   env:
  #     SUDO: 'sudo'
  #     BASH_ENV: $HOME/.bash_profile
    
  #   outputs:
  #       matrix: ${{ steps.set-matrix.outputs.matrix }}

  #   steps:
  #     - name: Checkout Streamlit code
  #       uses: actions/checkout@v3
  #     - name: Set up Python 3.7.12
  #       uses: actions/setup-python@v4
  #       with:
  #           python-version: "3.7.12"
  #     - uses: ./.github/actions/update_submodules
  #     - uses: ./.github/actions/pre_make
  #     - uses: ./.github/actions/make_init
  #     - name: Run make develop
  #       run: |
  #         make develop
  #       shell: bash -l -u -o pipefail {0}
  #     - name: Install Cypress dependencies
  #       run: |
  #         ${SUDO} apt-get install -y xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 jq curl
  #       shell: bash -l -u -o pipefail {0}
  #     # Revisit artifact saving
  #     # - name: Save Cypress artifacts
  #     #   uses: actions/upload-artifact@v2
  #     #   with:
  #     #     name: build
  #     #     if-no-files-found: error
  #     #     path: build
  #     - name: Init config
  #       run: |
  #         mkdir ~/.streamlit
  #         MAPBOX_TOKEN=$(curl -sS https://data.streamlit.io/tokens.json | jq -r '.["mapbox-localhost"]')
  #         echo '[mapbox]' >  ~/.streamlit/config.toml
  #         echo 'token = "'$MAPBOX_TOKEN'"' >> ~/.streamlit/config.toml
  #       shell: bash -l -u -o pipefail {0}
  #     - name: Init credentials
  #       run: |
  #         echo '[general]' >  ~/.streamlit/credentials.toml
  #         echo 'email = "test@streamlit.io"' >> ~/.streamlit/credentials.toml
  #       shell: bash -l -u -o pipefail {0}
  #     - name: Create matrix
  #       id: set-matrix
  #       run: |
  #         cd frontend
  #         echo "::set-output name=matrix::$(ls ../e2e/specs/*.spec.js | jq -R -s -c 'split("\n")[:-1]')"
  #       shell: bash -l -u -o pipefail {0}

  e2e_tests:
    env:
      SUDO: 'sudo'
      BASH_ENV: $HOME/.bash_profile
    runs-on: ubuntu-latest
    # needs: [build]

    strategy:
      fail-fast: false
      matrix:
        # specs: ${{ fromJson(needs.build.outputs.matrix) }}
        specs: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ]
    
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Streamlit code
        uses: actions/checkout@v3
      - name: Set up Python 3.7.12
        uses: actions/setup-python@v4
        with:
            python-version: "3.7.12"
      - uses: ./.github/actions/update_submodules
      - uses: ./.github/actions/pre_make
      - uses: ./.github/actions/make_init
      - name: Run make develop
        run: |
          make develop
        shell: bash -l -u -o pipefail {0}
      - name: Install Cypress dependencies
        run: |
          ${SUDO} apt-get install -y xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 jq curl
        shell: bash -l -u -o pipefail {0}
      - name: Init config
        run: |
          mkdir ~/.streamlit
          MAPBOX_TOKEN=$(curl -sS https://data.streamlit.io/tokens.json | jq -r '.["mapbox-localhost"]')
          echo '[mapbox]' >  ~/.streamlit/config.toml
          echo 'token = "'$MAPBOX_TOKEN'"' >> ~/.streamlit/config.toml
        shell: bash -l -u -o pipefail {0}
      - name: Init credentials
        run: |
          echo '[general]' >  ~/.streamlit/credentials.toml
          echo 'email = "test@streamlit.io"' >> ~/.streamlit/credentials.toml
        shell: bash -l -u -o pipefail {0}
      - name: Cypress Tests
        run: |
          source $HOME/.bash_profile
          js_specs=(e2e/specs/*)
          # get how many specs to be split up into 30 runs
          (( interval=(${#js_specs[@]}+30-1)/30 ))
          (( startIndex = (${{matrix.specs}} - 1) * ${interval} ))
          echo $startIndex
          echo "${js_specs[@]:${startIndex}:${interval}}"
          scripts/run_e2e_tests.py -a "${js_specs[@]:${startIndex}:${interval}}"
        shell: bash -l -u -o pipefail {0}
      - name: store videos
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: cypress_videos
          path: frontend/cypress/videos
      - name: store snapshots
        # if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: cypress_snapshots
          path: frontend/cypress/snapshots