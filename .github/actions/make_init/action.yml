name: "Setup & Initialize Virtual Env"
runs:
  using: composite
  steps:
    - name: Restore pre-commit cache
      id: cache-pre-commit
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: v1-pre-commit-${{ env.pythonLocation }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
    - if: steps.cache-pre-commit.outputs.cache-hit != 'true'
      name: Install pre-commit
      run: |
        pip install pre-commit
        pre-commit install-hooks
      shell: bash -ileo pipefail {0} {0}
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
        cache: 'yarn'
        cache-dependency-path: '**/yarn.lock'
    - name: Initialize React
      run: make react-init
      shell: bash -ileo pipefail {0} {0}
    - name: Install Dependencies
      run: |
        sudo apt update
        # protobuf, pyodbc, dot, & graphviz dependencies
        sudo apt install -y gnupg \
            unixodbc-dev \
            graphviz \
            libgvc6

        echo "deb http://ppa.launchpad.net/maarten-fonville/protobuf/ubuntu trusty main" | sudo tee /etc/apt/sources.list.d/protobuf.list
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4DEA8909DC6A13A3
        sudo apt update
        sudo apt install -y protobuf-compiler
      shell: bash -ileo pipefail {0} {0}
    - name: Restore virtualenv from cache
      id: cache-virtualenv
      uses: actions/cache@v3
      with:
        path: venv
        key: v1-python-venv-${{ hashFiles('**/python_cache_key.md5') }}
    - if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      name: Create Virtual Env
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        make setup
        make pipenv-install
        deactivate
      shell: bash -ileo pipefail {0} {0}
    - name: Activate virtualenv
      run: |
        echo "PATH=${PWD}/venv/bin:${PATH}" >> ${GITHUB_ENV}
        echo "VIRTUAL_ENV=${PWD}/venv" >> ${GITHUB_ENV}
      shell: bash -ileo pipefail {0} {0}
    - name: Generate Protobufs
      run: make protobuf
      shell: bash -ileo pipefail {0} {0}
