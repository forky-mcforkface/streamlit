name: "Initialize Virtual Env"
runs:
  using: composite
  steps:
    - name: Restore nvm, pre-commit cache, & node modules from cache
      id: cache-nvm-node-modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.nvm
          ~/.cache
          frontend/node_modules
        key: v1-nvm-node-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
    - if: steps.cache-nvm-node-modules.outputs.cache-hit != 'true'
      name: Install nvm, pre-commit cache and node_modules
      run: |
        if [ ! -d ~/.nvm ] ; then
          cd ..
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          mkdir $NVM_DIR
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
          echo "source $NVM_DIR/nvm.sh --install" >> "$HOME/.bash_profile"
          cd -
          source $HOME/.bash_profile
          nvm install
        fi
        npm install --location=global yarn
        if [ ! -d frontend/node_modules ] ; then
          source "$HOME/.nvm/nvm.sh"
          make react-init
        fi
      shell: bash -ileo pipefail {0}
    - name: Install pyodbc dependencies
      run: |
        sudo apt install -y unixodbc-dev
      shell: bash -ileo pipefail {0}
    - name: Install graphviz dependencies
      run: |
        sudo apt update
        sudo apt install -y libgvc6
      shell: bash -ileo pipefail {0}
    - name: Restore virtualenv from cache
      id: cache-virtualenv
      uses: actions/cache@v3
      with:
        path: venv
        key: v1-python-venv-${{ hashFiles('**/python_cache_key.md5') }}
    - if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      name: Create Virtual Env
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        make setup
        make pipenv-install
        deactivate

        # Add 'activate venv' to $HOME/.bash_profile. This means that our venv will be active
        # for the remainder of the job ($HOME/.bash_profile is evaluated at each step).
        echo 'source venv/bin/activate' >> $HOME/.bash_profile
      shell: bash -ileo pipefail {0}
    - name: Generate Protobufs
      run: |
        source venv/bin/activate
        # install protobuf v3
        sudo apt update
        sudo apt install -y gnupg
        echo "deb http://ppa.launchpad.net/maarten-fonville/protobuf/ubuntu trusty main" | sudo tee /etc/apt/sources.list.d/protobuf.list
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4DEA8909DC6A13A3
        sudo apt update
        sudo apt install -y protobuf-compiler
        
        # Generate protobufs
        make protobuf
      shell: bash -ileo pipefail {0}
